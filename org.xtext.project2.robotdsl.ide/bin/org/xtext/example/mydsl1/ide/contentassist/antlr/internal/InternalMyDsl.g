/*
 * generated by Xtext 2.34.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.mydsl1.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.mydsl1.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl1.services.MyDslGrammarAccess;

}
@parser::members {
	private MyDslGrammarAccess grammarAccess;

	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleRobotModel
entryRuleRobotModel
:
{ before(grammarAccess.getRobotModelRule()); }
	 ruleRobotModel
{ after(grammarAccess.getRobotModelRule()); } 
	 EOF 
;

// Rule RobotModel
ruleRobotModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRobotModelAccess().getGroup()); }
		(rule__RobotModel__Group__0)
		{ after(grammarAccess.getRobotModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getAlternatives()); }
		(rule__Expression__Alternatives)
		{ after(grammarAccess.getExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOr
entryRuleOr
:
{ before(grammarAccess.getOrRule()); }
	 ruleOr
{ after(grammarAccess.getOrRule()); } 
	 EOF 
;

// Rule Or
ruleOr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrAccess().getGroup()); }
		(rule__Or__Group__0)
		{ after(grammarAccess.getOrAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnd
entryRuleAnd
:
{ before(grammarAccess.getAndRule()); }
	 ruleAnd
{ after(grammarAccess.getAndRule()); } 
	 EOF 
;

// Rule And
ruleAnd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndAccess().getGroup()); }
		(rule__And__Group__0)
		{ after(grammarAccess.getAndAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEquality
entryRuleEquality
:
{ before(grammarAccess.getEqualityRule()); }
	 ruleEquality
{ after(grammarAccess.getEqualityRule()); } 
	 EOF 
;

// Rule Equality
ruleEquality 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEqualityAccess().getGroup()); }
		(rule__Equality__Group__0)
		{ after(grammarAccess.getEqualityAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComparison
entryRuleComparison
:
{ before(grammarAccess.getComparisonRule()); }
	 ruleComparison
{ after(grammarAccess.getComparisonRule()); } 
	 EOF 
;

// Rule Comparison
ruleComparison 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComparisonAccess().getGroup()); }
		(rule__Comparison__Group__0)
		{ after(grammarAccess.getComparisonAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIf
entryRuleIf
:
{ before(grammarAccess.getIfRule()); }
	 ruleIf
{ after(grammarAccess.getIfRule()); } 
	 EOF 
;

// Rule If
ruleIf 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfAccess().getGroup()); }
		(rule__If__Group__0)
		{ after(grammarAccess.getIfAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleThen
entryRuleThen
:
{ before(grammarAccess.getThenRule()); }
	 ruleThen
{ after(grammarAccess.getThenRule()); } 
	 EOF 
;

// Rule Then
ruleThen 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getThenAccess().getGroup()); }
		(rule__Then__Group__0)
		{ after(grammarAccess.getThenAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElse
entryRuleElse
:
{ before(grammarAccess.getElseRule()); }
	 ruleElse
{ after(grammarAccess.getElseRule()); } 
	 EOF 
;

// Rule Else
ruleElse 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElseAccess().getGroup()); }
		(rule__Else__Group__0)
		{ after(grammarAccess.getElseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePlusOrMinus
entryRulePlusOrMinus
:
{ before(grammarAccess.getPlusOrMinusRule()); }
	 rulePlusOrMinus
{ after(grammarAccess.getPlusOrMinusRule()); } 
	 EOF 
;

// Rule PlusOrMinus
rulePlusOrMinus 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPlusOrMinusAccess().getGroup()); }
		(rule__PlusOrMinus__Group__0)
		{ after(grammarAccess.getPlusOrMinusAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultOrDiv
entryRuleMultOrDiv
:
{ before(grammarAccess.getMultOrDivRule()); }
	 ruleMultOrDiv
{ after(grammarAccess.getMultOrDivRule()); } 
	 EOF 
;

// Rule MultOrDiv
ruleMultOrDiv 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultOrDivAccess().getGroup()); }
		(rule__MultOrDiv__Group__0)
		{ after(grammarAccess.getMultOrDivAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimary
entryRulePrimary
:
{ before(grammarAccess.getPrimaryRule()); }
	 rulePrimary
{ after(grammarAccess.getPrimaryRule()); } 
	 EOF 
;

// Rule Primary
rulePrimary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryAccess().getAlternatives()); }
		(rule__Primary__Alternatives)
		{ after(grammarAccess.getPrimaryAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAtomic
entryRuleAtomic
:
{ before(grammarAccess.getAtomicRule()); }
	 ruleAtomic
{ after(grammarAccess.getAtomicRule()); } 
	 EOF 
;

// Rule Atomic
ruleAtomic 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAtomicAccess().getGroup()); }
		(rule__Atomic__Group__0)
		{ after(grammarAccess.getAtomicAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEvent
entryRuleEvent
:
{ before(grammarAccess.getEventRule()); }
	 ruleEvent
{ after(grammarAccess.getEventRule()); } 
	 EOF 
;

// Rule Event
ruleEvent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEventAccess().getGroup()); }
		(rule__Event__Group__0)
		{ after(grammarAccess.getEventAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCondition
entryRuleCondition
:
{ before(grammarAccess.getConditionRule()); }
	 ruleCondition
{ after(grammarAccess.getConditionRule()); } 
	 EOF 
;

// Rule Condition
ruleCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionAccess().getAlternatives()); }
		(rule__Condition__Alternatives)
		{ after(grammarAccess.getConditionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSound
entryRuleSound
:
{ before(grammarAccess.getSoundRule()); }
	 ruleSound
{ after(grammarAccess.getSoundRule()); } 
	 EOF 
;

// Rule Sound
ruleSound 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSoundAccess().getGroup()); }
		(rule__Sound__Group__0)
		{ after(grammarAccess.getSoundAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleButton
entryRuleButton
:
{ before(grammarAccess.getButtonRule()); }
	 ruleButton
{ after(grammarAccess.getButtonRule()); } 
	 EOF 
;

// Rule Button
ruleButton 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getButtonAccess().getGroup()); }
		(rule__Button__Group__0)
		{ after(grammarAccess.getButtonAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSensor
entryRuleSensor
:
{ before(grammarAccess.getSensorRule()); }
	 ruleSensor
{ after(grammarAccess.getSensorRule()); } 
	 EOF 
;

// Rule Sensor
ruleSensor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSensorAccess().getGroup()); }
		(rule__Sensor__Group__0)
		{ after(grammarAccess.getSensorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTap
entryRuleTap
:
{ before(grammarAccess.getTapRule()); }
	 ruleTap
{ after(grammarAccess.getTapRule()); } 
	 EOF 
;

// Rule Tap
ruleTap 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTapAccess().getGroup()); }
		(rule__Tap__Group__0)
		{ after(grammarAccess.getTapAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAction
entryRuleAction
:
{ before(grammarAccess.getActionRule()); }
	 ruleAction
{ after(grammarAccess.getActionRule()); } 
	 EOF 
;

// Rule Action
ruleAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActionAccess().getAlternatives()); }
		(rule__Action__Alternatives)
		{ after(grammarAccess.getActionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMotorAction
entryRuleMotorAction
:
{ before(grammarAccess.getMotorActionRule()); }
	 ruleMotorAction
{ after(grammarAccess.getMotorActionRule()); } 
	 EOF 
;

// Rule MotorAction
ruleMotorAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMotorActionAccess().getGroup()); }
		(rule__MotorAction__Group__0)
		{ after(grammarAccess.getMotorActionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSoundAction
entryRuleSoundAction
:
{ before(grammarAccess.getSoundActionRule()); }
	 ruleSoundAction
{ after(grammarAccess.getSoundActionRule()); } 
	 EOF 
;

// Rule SoundAction
ruleSoundAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSoundActionAccess().getGroup()); }
		(rule__SoundAction__Group__0)
		{ after(grammarAccess.getSoundActionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLightAction
entryRuleLightAction
:
{ before(grammarAccess.getLightActionRule()); }
	 ruleLightAction
{ after(grammarAccess.getLightActionRule()); } 
	 EOF 
;

// Rule LightAction
ruleLightAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLightActionAccess().getGroup()); }
		(rule__LightAction__Group__0)
		{ after(grammarAccess.getLightActionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMusicSetting
entryRuleMusicSetting
:
{ before(grammarAccess.getMusicSettingRule()); }
	 ruleMusicSetting
{ after(grammarAccess.getMusicSettingRule()); } 
	 EOF 
;

// Rule MusicSetting
ruleMusicSetting 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMusicSettingAccess().getGroup()); }
		(rule__MusicSetting__Group__0)
		{ after(grammarAccess.getMusicSettingAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEInt
entryRuleEInt
:
{ before(grammarAccess.getEIntRule()); }
	 ruleEInt
{ after(grammarAccess.getEIntRule()); } 
	 EOF 
;

// Rule EInt
ruleEInt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEIntAccess().getGroup()); }
		(rule__EInt__Group__0)
		{ after(grammarAccess.getEIntAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getAlternatives()); }
		(rule__EString__Alternatives)
		{ after(grammarAccess.getEStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Duration
ruleDuration
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDurationAccess().getAlternatives()); }
		(rule__Duration__Alternatives)
		{ after(grammarAccess.getDurationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule LightPos
ruleLightPos
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLightPosAccess().getAlternatives()); }
		(rule__LightPos__Alternatives)
		{ after(grammarAccess.getLightPosAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Distance
ruleDistance
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDistanceAccess().getAlternatives()); }
		(rule__Distance__Alternatives)
		{ after(grammarAccess.getDistanceAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule ButtonType
ruleButtonType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getButtonTypeAccess().getAlternatives()); }
		(rule__ButtonType__Alternatives)
		{ after(grammarAccess.getButtonTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RobotModel__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRobotModelAccess().getEventsAssignment_1_0()); }
		(rule__RobotModel__EventsAssignment_1_0)
		{ after(grammarAccess.getRobotModelAccess().getEventsAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getRobotModelAccess().getGroup_1_1()); }
		(rule__RobotModel__Group_1_1__0)
		{ after(grammarAccess.getRobotModelAccess().getGroup_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getRobotModelAccess().getGroup_1_2()); }
		(rule__RobotModel__Group_1_2__0)
		{ after(grammarAccess.getRobotModelAccess().getGroup_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getRobotModelAccess().getExpressionsAssignment_1_3()); }
		(rule__RobotModel__ExpressionsAssignment_1_3)
		{ after(grammarAccess.getRobotModelAccess().getExpressionsAssignment_1_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getOrParserRuleCall_0()); }
		ruleOr
		{ after(grammarAccess.getExpressionAccess().getOrParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getIfParserRuleCall_1()); }
		ruleIf
		{ after(grammarAccess.getExpressionAccess().getIfParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__OperationAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityAccess().getOperationEqualsSignEqualsSignKeyword_1_1_0_0()); }
		'=='
		{ after(grammarAccess.getEqualityAccess().getOperationEqualsSignEqualsSignKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getEqualityAccess().getOperationExclamationMarkEqualsSignKeyword_1_1_0_1()); }
		'!='
		{ after(grammarAccess.getEqualityAccess().getOperationExclamationMarkEqualsSignKeyword_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__OperationAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getOperationGreaterThanSignEqualsSignKeyword_1_1_0_0()); }
		'>='
		{ after(grammarAccess.getComparisonAccess().getOperationGreaterThanSignEqualsSignKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonAccess().getOperationLessThanSignEqualsSignKeyword_1_1_0_1()); }
		'<='
		{ after(grammarAccess.getComparisonAccess().getOperationLessThanSignEqualsSignKeyword_1_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonAccess().getOperationGreaterThanSignKeyword_1_1_0_2()); }
		'>'
		{ after(grammarAccess.getComparisonAccess().getOperationGreaterThanSignKeyword_1_1_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonAccess().getOperationLessThanSignKeyword_1_1_0_3()); }
		'<'
		{ after(grammarAccess.getComparisonAccess().getOperationLessThanSignKeyword_1_1_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__OperationAlternatives_1_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlusOrMinusAccess().getOperationPlusSignKeyword_1_0_1_0_0()); }
		'+'
		{ after(grammarAccess.getPlusOrMinusAccess().getOperationPlusSignKeyword_1_0_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPlusOrMinusAccess().getOperationHyphenMinusKeyword_1_0_1_0_1()); }
		'-'
		{ after(grammarAccess.getPlusOrMinusAccess().getOperationHyphenMinusKeyword_1_0_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultOrDiv__OperationAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultOrDivAccess().getOperationAsteriskKeyword_1_1_0_0()); }
		'*'
		{ after(grammarAccess.getMultOrDivAccess().getOperationAsteriskKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getMultOrDivAccess().getOperationSolidusKeyword_1_1_0_1()); }
		'/'
		{ after(grammarAccess.getMultOrDivAccess().getOperationSolidusKeyword_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_0()); }
		(rule__Primary__Group_0__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_1()); }
		(rule__Primary__Group_1__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getAtomicParserRuleCall_2()); }
		ruleAtomic
		{ after(grammarAccess.getPrimaryAccess().getAtomicParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueAssignment_1_0()); }
		(rule__Atomic__ValueAssignment_1_0)
		{ after(grammarAccess.getAtomicAccess().getValueAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getAlternatives_1_1()); }
		(rule__Atomic__Alternatives_1_1)
		{ after(grammarAccess.getAtomicAccess().getAlternatives_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Alternatives_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getTRUEKeyword_1_1_0()); }
		'TRUE'
		{ after(grammarAccess.getAtomicAccess().getTRUEKeyword_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getFALSEKeyword_1_1_1()); }
		'FALSE'
		{ after(grammarAccess.getAtomicAccess().getFALSEKeyword_1_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getButtonParserRuleCall_0()); }
		ruleButton
		{ after(grammarAccess.getConditionAccess().getButtonParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getConditionAccess().getSensorParserRuleCall_1()); }
		ruleSensor
		{ after(grammarAccess.getConditionAccess().getSensorParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getConditionAccess().getSoundParserRuleCall_2()); }
		ruleSound
		{ after(grammarAccess.getConditionAccess().getSoundParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getConditionAccess().getTapParserRuleCall_3()); }
		ruleTap
		{ after(grammarAccess.getConditionAccess().getTapParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getMotorActionParserRuleCall_0()); }
		ruleMotorAction
		{ after(grammarAccess.getActionAccess().getMotorActionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getActionAccess().getSoundActionParserRuleCall_1()); }
		ruleSoundAction
		{ after(grammarAccess.getActionAccess().getSoundActionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getActionAccess().getLightActionParserRuleCall_2()); }
		ruleLightAction
		{ after(grammarAccess.getActionAccess().getLightActionParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Duration__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDurationAccess().getNONEEnumLiteralDeclaration_0()); }
		('NONE')
		{ after(grammarAccess.getDurationAccess().getNONEEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getDurationAccess().getMEDIUMEnumLiteralDeclaration_1()); }
		('MEDIUM')
		{ after(grammarAccess.getDurationAccess().getMEDIUMEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getDurationAccess().getLONGEnumLiteralDeclaration_2()); }
		('LONG')
		{ after(grammarAccess.getDurationAccess().getLONGEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LightPos__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLightPosAccess().getTOPEnumLiteralDeclaration_0()); }
		('TOP')
		{ after(grammarAccess.getLightPosAccess().getTOPEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getLightPosAccess().getBOTEnumLiteralDeclaration_1()); }
		('BOT')
		{ after(grammarAccess.getLightPosAccess().getBOTEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Distance__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDistanceAccess().getFAREnumLiteralDeclaration_0()); }
		('FAR')
		{ after(grammarAccess.getDistanceAccess().getFAREnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getDistanceAccess().getCLOSEEnumLiteralDeclaration_1()); }
		('CLOSE')
		{ after(grammarAccess.getDistanceAccess().getCLOSEEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ButtonType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getButtonTypeAccess().getBACKWARDEnumLiteralDeclaration_0()); }
		('BACKWARD')
		{ after(grammarAccess.getButtonTypeAccess().getBACKWARDEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getButtonTypeAccess().getLEFTEnumLiteralDeclaration_1()); }
		('LEFT')
		{ after(grammarAccess.getButtonTypeAccess().getLEFTEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getButtonTypeAccess().getRIGHTEnumLiteralDeclaration_2()); }
		('RIGHT')
		{ after(grammarAccess.getButtonTypeAccess().getRIGHTEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getButtonTypeAccess().getCENTEREnumLiteralDeclaration_3()); }
		('CENTER')
		{ after(grammarAccess.getButtonTypeAccess().getCENTEREnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getButtonTypeAccess().getFORWARDEnumLiteralDeclaration_4()); }
		('FORWARD')
		{ after(grammarAccess.getButtonTypeAccess().getFORWARDEnumLiteralDeclaration_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RobotModel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RobotModel__Group__0__Impl
	rule__RobotModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RobotModel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotModelAccess().getRobotModelAction_0()); }
	()
	{ after(grammarAccess.getRobotModelAccess().getRobotModelAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RobotModel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RobotModel__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RobotModel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotModelAccess().getAlternatives_1()); }
	(rule__RobotModel__Alternatives_1)*
	{ after(grammarAccess.getRobotModelAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RobotModel__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RobotModel__Group_1_1__0__Impl
	rule__RobotModel__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RobotModel__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotModelAccess().getActionKeyword_1_1_0()); }
	'Action:'
	{ after(grammarAccess.getRobotModelAccess().getActionKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RobotModel__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RobotModel__Group_1_1__1__Impl
	rule__RobotModel__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RobotModel__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotModelAccess().getHyphenMinusKeyword_1_1_1()); }
	'-'
	{ after(grammarAccess.getRobotModelAccess().getHyphenMinusKeyword_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RobotModel__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RobotModel__Group_1_1__2__Impl
	rule__RobotModel__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RobotModel__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotModelAccess().getActionsAssignment_1_1_2()); }
	(rule__RobotModel__ActionsAssignment_1_1_2)
	{ after(grammarAccess.getRobotModelAccess().getActionsAssignment_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RobotModel__Group_1_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RobotModel__Group_1_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RobotModel__Group_1_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotModelAccess().getGroup_1_1_3()); }
	(rule__RobotModel__Group_1_1_3__0)*
	{ after(grammarAccess.getRobotModelAccess().getGroup_1_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RobotModel__Group_1_1_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RobotModel__Group_1_1_3__0__Impl
	rule__RobotModel__Group_1_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RobotModel__Group_1_1_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotModelAccess().getHyphenMinusKeyword_1_1_3_0()); }
	'-'
	{ after(grammarAccess.getRobotModelAccess().getHyphenMinusKeyword_1_1_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RobotModel__Group_1_1_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RobotModel__Group_1_1_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RobotModel__Group_1_1_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotModelAccess().getActionsAssignment_1_1_3_1()); }
	(rule__RobotModel__ActionsAssignment_1_1_3_1)
	{ after(grammarAccess.getRobotModelAccess().getActionsAssignment_1_1_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RobotModel__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RobotModel__Group_1_2__0__Impl
	rule__RobotModel__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RobotModel__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotModelAccess().getConditionKeyword_1_2_0()); }
	'Condition:'
	{ after(grammarAccess.getRobotModelAccess().getConditionKeyword_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RobotModel__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RobotModel__Group_1_2__1__Impl
	rule__RobotModel__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RobotModel__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotModelAccess().getHyphenMinusKeyword_1_2_1()); }
	'-'
	{ after(grammarAccess.getRobotModelAccess().getHyphenMinusKeyword_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RobotModel__Group_1_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RobotModel__Group_1_2__2__Impl
	rule__RobotModel__Group_1_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RobotModel__Group_1_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotModelAccess().getConditionsAssignment_1_2_2()); }
	(rule__RobotModel__ConditionsAssignment_1_2_2)
	{ after(grammarAccess.getRobotModelAccess().getConditionsAssignment_1_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RobotModel__Group_1_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RobotModel__Group_1_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RobotModel__Group_1_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotModelAccess().getGroup_1_2_3()); }
	(rule__RobotModel__Group_1_2_3__0)*
	{ after(grammarAccess.getRobotModelAccess().getGroup_1_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RobotModel__Group_1_2_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RobotModel__Group_1_2_3__0__Impl
	rule__RobotModel__Group_1_2_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RobotModel__Group_1_2_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotModelAccess().getHyphenMinusKeyword_1_2_3_0()); }
	'-'
	{ after(grammarAccess.getRobotModelAccess().getHyphenMinusKeyword_1_2_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RobotModel__Group_1_2_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RobotModel__Group_1_2_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RobotModel__Group_1_2_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotModelAccess().getConditionsAssignment_1_2_3_1()); }
	(rule__RobotModel__ConditionsAssignment_1_2_3_1)
	{ after(grammarAccess.getRobotModelAccess().getConditionsAssignment_1_2_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group__0__Impl
	rule__Or__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getAndParserRuleCall_0()); }
	ruleAnd
	{ after(grammarAccess.getOrAccess().getAndParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getGroup_1()); }
	(rule__Or__Group_1__0)*
	{ after(grammarAccess.getOrAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group_1__0__Impl
	rule__Or__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getOrAccess().getExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group_1__1__Impl
	rule__Or__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getOperationAssignment_1_1()); }
	(rule__Or__OperationAssignment_1_1)
	{ after(grammarAccess.getOrAccess().getOperationAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getRightAssignment_1_2()); }
	(rule__Or__RightAssignment_1_2)
	{ after(grammarAccess.getOrAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group__0__Impl
	rule__And__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getEqualityParserRuleCall_0()); }
	ruleEquality
	{ after(grammarAccess.getAndAccess().getEqualityParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getGroup_1()); }
	(rule__And__Group_1__0)*
	{ after(grammarAccess.getAndAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group_1__0__Impl
	rule__And__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getAndAccess().getExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group_1__1__Impl
	rule__And__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getOperationAssignment_1_1()); }
	(rule__And__OperationAssignment_1_1)
	{ after(grammarAccess.getAndAccess().getOperationAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getRightAssignment_1_2()); }
	(rule__And__RightAssignment_1_2)
	{ after(grammarAccess.getAndAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Equality__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group__0__Impl
	rule__Equality__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getComparisonParserRuleCall_0()); }
	ruleComparison
	{ after(grammarAccess.getEqualityAccess().getComparisonParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getGroup_1()); }
	(rule__Equality__Group_1__0)*
	{ after(grammarAccess.getEqualityAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Equality__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group_1__0__Impl
	rule__Equality__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getEqualityAccess().getExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group_1__1__Impl
	rule__Equality__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getOperationAssignment_1_1()); }
	(rule__Equality__OperationAssignment_1_1)
	{ after(grammarAccess.getEqualityAccess().getOperationAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getRightAssignment_1_2()); }
	(rule__Equality__RightAssignment_1_2)
	{ after(grammarAccess.getEqualityAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group__0__Impl
	rule__Comparison__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getPlusOrMinusParserRuleCall_0()); }
	rulePlusOrMinus
	{ after(grammarAccess.getComparisonAccess().getPlusOrMinusParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getGroup_1()); }
	(rule__Comparison__Group_1__0)*
	{ after(grammarAccess.getComparisonAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1__0__Impl
	rule__Comparison__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getComparisonAccess().getExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1__1__Impl
	rule__Comparison__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getOperationAssignment_1_1()); }
	(rule__Comparison__OperationAssignment_1_1)
	{ after(grammarAccess.getComparisonAccess().getOperationAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getRightAssignment_1_2()); }
	(rule__Comparison__RightAssignment_1_2)
	{ after(grammarAccess.getComparisonAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__If__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group__0__Impl
	rule__If__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getExpressionAction_0()); }
	()
	{ after(grammarAccess.getIfAccess().getExpressionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group__1__Impl
	rule__If__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getOperationAssignment_1()); }
	(rule__If__OperationAssignment_1)
	{ after(grammarAccess.getIfAccess().getOperationAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group__2__Impl
	rule__If__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getLeftAssignment_2()); }
	(rule__If__LeftAssignment_2)
	{ after(grammarAccess.getIfAccess().getLeftAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getRightAssignment_3()); }
	(rule__If__RightAssignment_3)
	{ after(grammarAccess.getIfAccess().getRightAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Then__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Then__Group__0__Impl
	rule__Then__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThenAccess().getExpressionAction_0()); }
	()
	{ after(grammarAccess.getThenAccess().getExpressionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Then__Group__1__Impl
	rule__Then__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThenAccess().getOperationAssignment_1()); }
	(rule__Then__OperationAssignment_1)
	{ after(grammarAccess.getThenAccess().getOperationAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Then__Group__2__Impl
	rule__Then__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThenAccess().getLeftAssignment_2()); }
	(rule__Then__LeftAssignment_2)
	{ after(grammarAccess.getThenAccess().getLeftAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Then__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThenAccess().getRightAssignment_3()); }
	(rule__Then__RightAssignment_3)
	{ after(grammarAccess.getThenAccess().getRightAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Else__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Else__Group__0__Impl
	rule__Else__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Else__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseAccess().getExpressionAction_0()); }
	()
	{ after(grammarAccess.getElseAccess().getExpressionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Else__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Else__Group__1__Impl
	rule__Else__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Else__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseAccess().getOperationAssignment_1()); }
	(rule__Else__OperationAssignment_1)
	{ after(grammarAccess.getElseAccess().getOperationAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Else__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Else__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Else__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseAccess().getLeftAssignment_2()); }
	(rule__Else__LeftAssignment_2)
	{ after(grammarAccess.getElseAccess().getLeftAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusOrMinus__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group__0__Impl
	rule__PlusOrMinus__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getMultOrDivParserRuleCall_0()); }
	ruleMultOrDiv
	{ after(grammarAccess.getPlusOrMinusAccess().getMultOrDivParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getGroup_1()); }
	(rule__PlusOrMinus__Group_1__0)*
	{ after(grammarAccess.getPlusOrMinusAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusOrMinus__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group_1__0__Impl
	rule__PlusOrMinus__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getGroup_1_0()); }
	(rule__PlusOrMinus__Group_1_0__0)
	{ after(grammarAccess.getPlusOrMinusAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getRightAssignment_1_1()); }
	(rule__PlusOrMinus__RightAssignment_1_1)
	{ after(grammarAccess.getPlusOrMinusAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusOrMinus__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group_1_0__0__Impl
	rule__PlusOrMinus__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getExpressionLeftAction_1_0_0()); }
	()
	{ after(grammarAccess.getPlusOrMinusAccess().getExpressionLeftAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getOperationAssignment_1_0_1()); }
	(rule__PlusOrMinus__OperationAssignment_1_0_1)
	{ after(grammarAccess.getPlusOrMinusAccess().getOperationAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultOrDiv__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultOrDiv__Group__0__Impl
	rule__MultOrDiv__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultOrDiv__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultOrDivAccess().getPrimaryParserRuleCall_0()); }
	rulePrimary
	{ after(grammarAccess.getMultOrDivAccess().getPrimaryParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultOrDiv__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultOrDiv__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultOrDiv__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultOrDivAccess().getGroup_1()); }
	(rule__MultOrDiv__Group_1__0)*
	{ after(grammarAccess.getMultOrDivAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultOrDiv__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultOrDiv__Group_1__0__Impl
	rule__MultOrDiv__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultOrDiv__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultOrDivAccess().getExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getMultOrDivAccess().getExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultOrDiv__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultOrDiv__Group_1__1__Impl
	rule__MultOrDiv__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MultOrDiv__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultOrDivAccess().getOperationAssignment_1_1()); }
	(rule__MultOrDiv__OperationAssignment_1_1)
	{ after(grammarAccess.getMultOrDivAccess().getOperationAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultOrDiv__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultOrDiv__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultOrDiv__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultOrDivAccess().getRightAssignment_1_2()); }
	(rule__MultOrDiv__RightAssignment_1_2)
	{ after(grammarAccess.getMultOrDivAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__0__Impl
	rule__Primary__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_0()); }
	'('
	{ after(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__1__Impl
	rule__Primary__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getExpressionParserRuleCall_0_1()); }
	ruleExpression
	{ after(grammarAccess.getPrimaryAccess().getExpressionParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_2()); }
	')'
	{ after(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__0__Impl
	rule__Primary__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getExpressionAction_1_0()); }
	()
	{ after(grammarAccess.getPrimaryAccess().getExpressionAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__1__Impl
	rule__Primary__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getOperationAssignment_1_1()); }
	(rule__Primary__OperationAssignment_1_1)
	{ after(grammarAccess.getPrimaryAccess().getOperationAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getLeftAssignment_1_2()); }
	(rule__Primary__LeftAssignment_1_2)
	{ after(grammarAccess.getPrimaryAccess().getLeftAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group__0__Impl
	rule__Atomic__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getExpressionAction_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getExpressionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getAlternatives_1()); }
	(rule__Atomic__Alternatives_1)
	{ after(grammarAccess.getAtomicAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Event__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Event__Group__0__Impl
	rule__Event__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventAccess().getEventAction_0()); }
	()
	{ after(grammarAccess.getEventAccess().getEventAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Event__Group__1__Impl
	rule__Event__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventAccess().getEventKeyword_1()); }
	'Event'
	{ after(grammarAccess.getEventAccess().getEventKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Event__Group__2__Impl
	rule__Event__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventAccess().getNameAssignment_2()); }
	(rule__Event__NameAssignment_2)
	{ after(grammarAccess.getEventAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Event__Group__3__Impl
	rule__Event__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventAccess().getGroup_3()); }
	(rule__Event__Group_3__0)?
	{ after(grammarAccess.getEventAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Event__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventAccess().getGroup_4()); }
	(rule__Event__Group_4__0)?
	{ after(grammarAccess.getEventAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Event__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Event__Group_3__0__Impl
	rule__Event__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventAccess().getConditionsKeyword_3_0()); }
	'conditions:'
	{ after(grammarAccess.getEventAccess().getConditionsKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Event__Group_3__1__Impl
	rule__Event__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventAccess().getConditionsAssignment_3_1()); }
	(rule__Event__ConditionsAssignment_3_1)
	{ after(grammarAccess.getEventAccess().getConditionsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Event__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventAccess().getGroup_3_2()); }
	(rule__Event__Group_3_2__0)*
	{ after(grammarAccess.getEventAccess().getGroup_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Event__Group_3_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Event__Group_3_2__0__Impl
	rule__Event__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group_3_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventAccess().getAndKeyword_3_2_0()); }
	'and'
	{ after(grammarAccess.getEventAccess().getAndKeyword_3_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group_3_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Event__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group_3_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventAccess().getConditionsAssignment_3_2_1()); }
	(rule__Event__ConditionsAssignment_3_2_1)
	{ after(grammarAccess.getEventAccess().getConditionsAssignment_3_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Event__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Event__Group_4__0__Impl
	rule__Event__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventAccess().getActionsKeyword_4_0()); }
	'actions:'
	{ after(grammarAccess.getEventAccess().getActionsKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Event__Group_4__1__Impl
	rule__Event__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventAccess().getActionsAssignment_4_1()); }
	(rule__Event__ActionsAssignment_4_1)
	{ after(grammarAccess.getEventAccess().getActionsAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Event__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventAccess().getGroup_4_2()); }
	(rule__Event__Group_4_2__0)*
	{ after(grammarAccess.getEventAccess().getGroup_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Event__Group_4_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Event__Group_4_2__0__Impl
	rule__Event__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group_4_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventAccess().getCommaKeyword_4_2_0()); }
	','
	{ after(grammarAccess.getEventAccess().getCommaKeyword_4_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group_4_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Event__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group_4_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventAccess().getActionsAssignment_4_2_1()); }
	(rule__Event__ActionsAssignment_4_2_1)
	{ after(grammarAccess.getEventAccess().getActionsAssignment_4_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Sound__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sound__Group__0__Impl
	rule__Sound__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sound__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSoundAccess().getSoundAction_0()); }
	()
	{ after(grammarAccess.getSoundAccess().getSoundAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sound__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sound__Group__1__Impl
	rule__Sound__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Sound__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSoundAccess().getSoundKeyword_1()); }
	'Sound'
	{ after(grammarAccess.getSoundAccess().getSoundKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sound__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sound__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sound__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSoundAccess().getConditionnameAssignment_2()); }
	(rule__Sound__ConditionnameAssignment_2)
	{ after(grammarAccess.getSoundAccess().getConditionnameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Button__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Button__Group__0__Impl
	rule__Button__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getButtonAccess().getButtonAction_0()); }
	()
	{ after(grammarAccess.getButtonAccess().getButtonAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Button__Group__1__Impl
	rule__Button__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getButtonAccess().getButtonKeyword_1()); }
	'Button'
	{ after(grammarAccess.getButtonAccess().getButtonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Button__Group__2__Impl
	rule__Button__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getButtonAccess().getConditionnameAssignment_2()); }
	(rule__Button__ConditionnameAssignment_2)
	{ after(grammarAccess.getButtonAccess().getConditionnameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Button__Group__3__Impl
	rule__Button__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getButtonAccess().getButtonKeyword_3()); }
	'button'
	{ after(grammarAccess.getButtonAccess().getButtonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Button__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getButtonAccess().getButtonAssignment_4()); }
	(rule__Button__ButtonAssignment_4)
	{ after(grammarAccess.getButtonAccess().getButtonAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Sensor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__0__Impl
	rule__Sensor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getSensorAction_0()); }
	()
	{ after(grammarAccess.getSensorAccess().getSensorAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__1__Impl
	rule__Sensor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getSensorKeyword_1()); }
	'Sensor'
	{ after(grammarAccess.getSensorAccess().getSensorKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__2__Impl
	rule__Sensor__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getConditionnameAssignment_2()); }
	(rule__Sensor__ConditionnameAssignment_2)
	{ after(grammarAccess.getSensorAccess().getConditionnameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__3__Impl
	rule__Sensor__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getSensorPosKeyword_3()); }
	'sensorPos'
	{ after(grammarAccess.getSensorAccess().getSensorPosKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__4__Impl
	rule__Sensor__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getSensorPosAssignment_4()); }
	(rule__Sensor__SensorPosAssignment_4)
	{ after(grammarAccess.getSensorAccess().getSensorPosAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__5__Impl
	rule__Sensor__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getDistanceKeyword_5()); }
	'distance'
	{ after(grammarAccess.getSensorAccess().getDistanceKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getDistanceAssignment_6()); }
	(rule__Sensor__DistanceAssignment_6)
	{ after(grammarAccess.getSensorAccess().getDistanceAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Tap__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tap__Group__0__Impl
	rule__Tap__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Tap__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTapAccess().getTapAction_0()); }
	()
	{ after(grammarAccess.getTapAccess().getTapAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tap__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tap__Group__1__Impl
	rule__Tap__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Tap__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTapAccess().getTapKeyword_1()); }
	'Tap'
	{ after(grammarAccess.getTapAccess().getTapKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tap__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tap__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Tap__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTapAccess().getConditionnameAssignment_2()); }
	(rule__Tap__ConditionnameAssignment_2)
	{ after(grammarAccess.getTapAccess().getConditionnameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MotorAction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MotorAction__Group__0__Impl
	rule__MotorAction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MotorAction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMotorActionAccess().getMotorActionAction_0()); }
	()
	{ after(grammarAccess.getMotorActionAccess().getMotorActionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MotorAction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MotorAction__Group__1__Impl
	rule__MotorAction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MotorAction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMotorActionAccess().getMotorActionKeyword_1()); }
	'MotorAction'
	{ after(grammarAccess.getMotorActionAccess().getMotorActionKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MotorAction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MotorAction__Group__2__Impl
	rule__MotorAction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MotorAction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMotorActionAccess().getActionnameAssignment_2()); }
	(rule__MotorAction__ActionnameAssignment_2)
	{ after(grammarAccess.getMotorActionAccess().getActionnameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MotorAction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MotorAction__Group__3__Impl
	rule__MotorAction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MotorAction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMotorActionAccess().getGroup_3()); }
	(rule__MotorAction__Group_3__0)?
	{ after(grammarAccess.getMotorActionAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MotorAction__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MotorAction__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MotorAction__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMotorActionAccess().getGroup_4()); }
	(rule__MotorAction__Group_4__0)?
	{ after(grammarAccess.getMotorActionAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MotorAction__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MotorAction__Group_3__0__Impl
	rule__MotorAction__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MotorAction__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMotorActionAccess().getMotorLeftKeyword_3_0()); }
	'motorLeft'
	{ after(grammarAccess.getMotorActionAccess().getMotorLeftKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MotorAction__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MotorAction__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MotorAction__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMotorActionAccess().getMotorLeftAssignment_3_1()); }
	(rule__MotorAction__MotorLeftAssignment_3_1)
	{ after(grammarAccess.getMotorActionAccess().getMotorLeftAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MotorAction__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MotorAction__Group_4__0__Impl
	rule__MotorAction__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MotorAction__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMotorActionAccess().getMotorRightKeyword_4_0()); }
	'motorRight'
	{ after(grammarAccess.getMotorActionAccess().getMotorRightKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MotorAction__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MotorAction__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MotorAction__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMotorActionAccess().getMotorRightAssignment_4_1()); }
	(rule__MotorAction__MotorRightAssignment_4_1)
	{ after(grammarAccess.getMotorActionAccess().getMotorRightAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SoundAction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SoundAction__Group__0__Impl
	rule__SoundAction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SoundAction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSoundActionAccess().getSoundActionAction_0()); }
	()
	{ after(grammarAccess.getSoundActionAccess().getSoundActionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SoundAction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SoundAction__Group__1__Impl
	rule__SoundAction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SoundAction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSoundActionAccess().getSoundActionKeyword_1()); }
	'SoundAction'
	{ after(grammarAccess.getSoundActionAccess().getSoundActionKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SoundAction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SoundAction__Group__2__Impl
	rule__SoundAction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SoundAction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSoundActionAccess().getActionnameAssignment_2()); }
	(rule__SoundAction__ActionnameAssignment_2)
	{ after(grammarAccess.getSoundActionAccess().getActionnameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SoundAction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SoundAction__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SoundAction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSoundActionAccess().getGroup_3()); }
	(rule__SoundAction__Group_3__0)?
	{ after(grammarAccess.getSoundActionAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SoundAction__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SoundAction__Group_3__0__Impl
	rule__SoundAction__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SoundAction__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSoundActionAccess().getSetKeyword_3_0()); }
	'set:'
	{ after(grammarAccess.getSoundActionAccess().getSetKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SoundAction__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SoundAction__Group_3__1__Impl
	rule__SoundAction__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SoundAction__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSoundActionAccess().getMusicsettingsAssignment_3_1()); }
	(rule__SoundAction__MusicsettingsAssignment_3_1)
	{ after(grammarAccess.getSoundActionAccess().getMusicsettingsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SoundAction__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SoundAction__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SoundAction__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSoundActionAccess().getGroup_3_2()); }
	(rule__SoundAction__Group_3_2__0)*
	{ after(grammarAccess.getSoundActionAccess().getGroup_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SoundAction__Group_3_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SoundAction__Group_3_2__0__Impl
	rule__SoundAction__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SoundAction__Group_3_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSoundActionAccess().getCommaKeyword_3_2_0()); }
	','
	{ after(grammarAccess.getSoundActionAccess().getCommaKeyword_3_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SoundAction__Group_3_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SoundAction__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SoundAction__Group_3_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSoundActionAccess().getMusicsettingsAssignment_3_2_1()); }
	(rule__SoundAction__MusicsettingsAssignment_3_2_1)
	{ after(grammarAccess.getSoundActionAccess().getMusicsettingsAssignment_3_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LightAction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LightAction__Group__0__Impl
	rule__LightAction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LightAction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLightActionAccess().getLightActionAction_0()); }
	()
	{ after(grammarAccess.getLightActionAccess().getLightActionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LightAction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LightAction__Group__1__Impl
	rule__LightAction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LightAction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLightActionAccess().getLightActionKeyword_1()); }
	'LightAction'
	{ after(grammarAccess.getLightActionAccess().getLightActionKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LightAction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LightAction__Group__2__Impl
	rule__LightAction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LightAction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLightActionAccess().getActionnameAssignment_2()); }
	(rule__LightAction__ActionnameAssignment_2)
	{ after(grammarAccess.getLightActionAccess().getActionnameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LightAction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LightAction__Group__3__Impl
	rule__LightAction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LightAction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLightActionAccess().getPosKeyword_3()); }
	'pos:'
	{ after(grammarAccess.getLightActionAccess().getPosKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LightAction__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LightAction__Group__4__Impl
	rule__LightAction__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__LightAction__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLightActionAccess().getPosAssignment_4()); }
	(rule__LightAction__PosAssignment_4)
	{ after(grammarAccess.getLightActionAccess().getPosAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LightAction__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LightAction__Group__5__Impl
	rule__LightAction__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__LightAction__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLightActionAccess().getGroup_5()); }
	(rule__LightAction__Group_5__0)?
	{ after(grammarAccess.getLightActionAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LightAction__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LightAction__Group__6__Impl
	rule__LightAction__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__LightAction__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLightActionAccess().getGroup_6()); }
	(rule__LightAction__Group_6__0)?
	{ after(grammarAccess.getLightActionAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LightAction__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LightAction__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LightAction__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLightActionAccess().getGroup_7()); }
	(rule__LightAction__Group_7__0)?
	{ after(grammarAccess.getLightActionAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LightAction__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LightAction__Group_5__0__Impl
	rule__LightAction__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LightAction__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLightActionAccess().getRedKeyword_5_0()); }
	'red:'
	{ after(grammarAccess.getLightActionAccess().getRedKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LightAction__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LightAction__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LightAction__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLightActionAccess().getRedAssignment_5_1()); }
	(rule__LightAction__RedAssignment_5_1)
	{ after(grammarAccess.getLightActionAccess().getRedAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LightAction__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LightAction__Group_6__0__Impl
	rule__LightAction__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LightAction__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLightActionAccess().getGreenKeyword_6_0()); }
	'green:'
	{ after(grammarAccess.getLightActionAccess().getGreenKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LightAction__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LightAction__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LightAction__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLightActionAccess().getGreenAssignment_6_1()); }
	(rule__LightAction__GreenAssignment_6_1)
	{ after(grammarAccess.getLightActionAccess().getGreenAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LightAction__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LightAction__Group_7__0__Impl
	rule__LightAction__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LightAction__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLightActionAccess().getBlueKeyword_7_0()); }
	'blue:'
	{ after(grammarAccess.getLightActionAccess().getBlueKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LightAction__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LightAction__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LightAction__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLightActionAccess().getBlueAssignment_7_1()); }
	(rule__LightAction__BlueAssignment_7_1)
	{ after(grammarAccess.getLightActionAccess().getBlueAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MusicSetting__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MusicSetting__Group__0__Impl
	rule__MusicSetting__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MusicSetting__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMusicSettingAccess().getMusicSettingAction_0()); }
	()
	{ after(grammarAccess.getMusicSettingAccess().getMusicSettingAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MusicSetting__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MusicSetting__Group__1__Impl
	rule__MusicSetting__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MusicSetting__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMusicSettingAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getMusicSettingAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MusicSetting__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MusicSetting__Group__2__Impl
	rule__MusicSetting__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MusicSetting__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMusicSettingAccess().getNoteAssignment_2()); }
	(rule__MusicSetting__NoteAssignment_2)
	{ after(grammarAccess.getMusicSettingAccess().getNoteAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MusicSetting__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MusicSetting__Group__3__Impl
	rule__MusicSetting__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MusicSetting__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMusicSettingAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getMusicSettingAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MusicSetting__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MusicSetting__Group__4__Impl
	rule__MusicSetting__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MusicSetting__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMusicSettingAccess().getDurationAssignment_4()); }
	(rule__MusicSetting__DurationAssignment_4)
	{ after(grammarAccess.getMusicSettingAccess().getDurationAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MusicSetting__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MusicSetting__Group__5__Impl
	rule__MusicSetting__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MusicSetting__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMusicSettingAccess().getCommaKeyword_5()); }
	','
	{ after(grammarAccess.getMusicSettingAccess().getCommaKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MusicSetting__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MusicSetting__Group__6__Impl
	rule__MusicSetting__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__MusicSetting__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMusicSettingAccess().getPosAssignment_6()); }
	(rule__MusicSetting__PosAssignment_6)
	{ after(grammarAccess.getMusicSettingAccess().getPosAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MusicSetting__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MusicSetting__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MusicSetting__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMusicSettingAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getMusicSettingAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EInt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EInt__Group__0__Impl
	rule__EInt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
	('-')?
	{ after(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EInt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
	{ after(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RobotModel__EventsAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRobotModelAccess().getEventsEventParserRuleCall_1_0_0()); }
		ruleEvent
		{ after(grammarAccess.getRobotModelAccess().getEventsEventParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RobotModel__ActionsAssignment_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRobotModelAccess().getActionsActionParserRuleCall_1_1_2_0()); }
		ruleAction
		{ after(grammarAccess.getRobotModelAccess().getActionsActionParserRuleCall_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RobotModel__ActionsAssignment_1_1_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRobotModelAccess().getActionsActionParserRuleCall_1_1_3_1_0()); }
		ruleAction
		{ after(grammarAccess.getRobotModelAccess().getActionsActionParserRuleCall_1_1_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RobotModel__ConditionsAssignment_1_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRobotModelAccess().getConditionsConditionParserRuleCall_1_2_2_0()); }
		ruleCondition
		{ after(grammarAccess.getRobotModelAccess().getConditionsConditionParserRuleCall_1_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RobotModel__ConditionsAssignment_1_2_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRobotModelAccess().getConditionsConditionParserRuleCall_1_2_3_1_0()); }
		ruleCondition
		{ after(grammarAccess.getRobotModelAccess().getConditionsConditionParserRuleCall_1_2_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RobotModel__ExpressionsAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRobotModelAccess().getExpressionsExpressionParserRuleCall_1_3_0()); }
		ruleExpression
		{ after(grammarAccess.getRobotModelAccess().getExpressionsExpressionParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__OperationAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrAccess().getOperationVerticalLineVerticalLineKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getOrAccess().getOperationVerticalLineVerticalLineKeyword_1_1_0()); }
			'||'
			{ after(grammarAccess.getOrAccess().getOperationVerticalLineVerticalLineKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getOrAccess().getOperationVerticalLineVerticalLineKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrAccess().getRightAndParserRuleCall_1_2_0()); }
		ruleAnd
		{ after(grammarAccess.getOrAccess().getRightAndParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__OperationAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndAccess().getOperationAmpersandAmpersandKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getAndAccess().getOperationAmpersandAmpersandKeyword_1_1_0()); }
			'&&'
			{ after(grammarAccess.getAndAccess().getOperationAmpersandAmpersandKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getAndAccess().getOperationAmpersandAmpersandKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndAccess().getRightEqualityParserRuleCall_1_2_0()); }
		ruleEquality
		{ after(grammarAccess.getAndAccess().getRightEqualityParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__OperationAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityAccess().getOperationAlternatives_1_1_0()); }
		(rule__Equality__OperationAlternatives_1_1_0)
		{ after(grammarAccess.getEqualityAccess().getOperationAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityAccess().getRightComparisonParserRuleCall_1_2_0()); }
		ruleComparison
		{ after(grammarAccess.getEqualityAccess().getRightComparisonParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__OperationAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getOperationAlternatives_1_1_0()); }
		(rule__Comparison__OperationAlternatives_1_1_0)
		{ after(grammarAccess.getComparisonAccess().getOperationAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getRightPlusOrMinusParserRuleCall_1_2_0()); }
		rulePlusOrMinus
		{ after(grammarAccess.getComparisonAccess().getRightPlusOrMinusParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__OperationAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfAccess().getOperationIfKeyword_1_0()); }
		(
			{ before(grammarAccess.getIfAccess().getOperationIfKeyword_1_0()); }
			'if'
			{ after(grammarAccess.getIfAccess().getOperationIfKeyword_1_0()); }
		)
		{ after(grammarAccess.getIfAccess().getOperationIfKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__LeftAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfAccess().getLeftExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getIfAccess().getLeftExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__RightAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfAccess().getRightThenParserRuleCall_3_0()); }
		ruleThen
		{ after(grammarAccess.getIfAccess().getRightThenParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__OperationAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getThenAccess().getOperationThenKeyword_1_0()); }
		(
			{ before(grammarAccess.getThenAccess().getOperationThenKeyword_1_0()); }
			'then'
			{ after(grammarAccess.getThenAccess().getOperationThenKeyword_1_0()); }
		)
		{ after(grammarAccess.getThenAccess().getOperationThenKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__LeftAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getThenAccess().getLeftExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getThenAccess().getLeftExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__RightAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getThenAccess().getRightElseParserRuleCall_3_0()); }
		ruleElse
		{ after(grammarAccess.getThenAccess().getRightElseParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Else__OperationAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElseAccess().getOperationElseKeyword_1_0()); }
		(
			{ before(grammarAccess.getElseAccess().getOperationElseKeyword_1_0()); }
			'else'
			{ after(grammarAccess.getElseAccess().getOperationElseKeyword_1_0()); }
		)
		{ after(grammarAccess.getElseAccess().getOperationElseKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Else__LeftAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElseAccess().getLeftExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getElseAccess().getLeftExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__OperationAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlusOrMinusAccess().getOperationAlternatives_1_0_1_0()); }
		(rule__PlusOrMinus__OperationAlternatives_1_0_1_0)
		{ after(grammarAccess.getPlusOrMinusAccess().getOperationAlternatives_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlusOrMinusAccess().getRightMultOrDivParserRuleCall_1_1_0()); }
		ruleMultOrDiv
		{ after(grammarAccess.getPlusOrMinusAccess().getRightMultOrDivParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultOrDiv__OperationAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultOrDivAccess().getOperationAlternatives_1_1_0()); }
		(rule__MultOrDiv__OperationAlternatives_1_1_0)
		{ after(grammarAccess.getMultOrDivAccess().getOperationAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultOrDiv__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultOrDivAccess().getRightPrimaryParserRuleCall_1_2_0()); }
		rulePrimary
		{ after(grammarAccess.getMultOrDivAccess().getRightPrimaryParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__OperationAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getOperationExclamationMarkKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getPrimaryAccess().getOperationExclamationMarkKeyword_1_1_0()); }
			'!'
			{ after(grammarAccess.getPrimaryAccess().getOperationExclamationMarkKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getPrimaryAccess().getOperationExclamationMarkKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__LeftAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getLeftPrimaryParserRuleCall_1_2_0()); }
		rulePrimary
		{ after(grammarAccess.getPrimaryAccess().getLeftPrimaryParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueINTTerminalRuleCall_1_0_0()); }
		RULE_INT
		{ after(grammarAccess.getAtomicAccess().getValueINTTerminalRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventAccess().getNameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getEventAccess().getNameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__ConditionsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventAccess().getConditionsConditionCrossReference_3_1_0()); }
		(
			{ before(grammarAccess.getEventAccess().getConditionsConditionEStringParserRuleCall_3_1_0_1()); }
			ruleEString
			{ after(grammarAccess.getEventAccess().getConditionsConditionEStringParserRuleCall_3_1_0_1()); }
		)
		{ after(grammarAccess.getEventAccess().getConditionsConditionCrossReference_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__ConditionsAssignment_3_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventAccess().getConditionsConditionCrossReference_3_2_1_0()); }
		(
			{ before(grammarAccess.getEventAccess().getConditionsConditionEStringParserRuleCall_3_2_1_0_1()); }
			ruleEString
			{ after(grammarAccess.getEventAccess().getConditionsConditionEStringParserRuleCall_3_2_1_0_1()); }
		)
		{ after(grammarAccess.getEventAccess().getConditionsConditionCrossReference_3_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__ActionsAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventAccess().getActionsActionCrossReference_4_1_0()); }
		(
			{ before(grammarAccess.getEventAccess().getActionsActionEStringParserRuleCall_4_1_0_1()); }
			ruleEString
			{ after(grammarAccess.getEventAccess().getActionsActionEStringParserRuleCall_4_1_0_1()); }
		)
		{ after(grammarAccess.getEventAccess().getActionsActionCrossReference_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__ActionsAssignment_4_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventAccess().getActionsActionCrossReference_4_2_1_0()); }
		(
			{ before(grammarAccess.getEventAccess().getActionsActionEStringParserRuleCall_4_2_1_0_1()); }
			ruleEString
			{ after(grammarAccess.getEventAccess().getActionsActionEStringParserRuleCall_4_2_1_0_1()); }
		)
		{ after(grammarAccess.getEventAccess().getActionsActionCrossReference_4_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sound__ConditionnameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSoundAccess().getConditionnameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getSoundAccess().getConditionnameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__ConditionnameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getButtonAccess().getConditionnameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getButtonAccess().getConditionnameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__ButtonAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getButtonAccess().getButtonButtonTypeEnumRuleCall_4_0()); }
		ruleButtonType
		{ after(grammarAccess.getButtonAccess().getButtonButtonTypeEnumRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__ConditionnameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSensorAccess().getConditionnameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getSensorAccess().getConditionnameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__SensorPosAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSensorAccess().getSensorPosEIntParserRuleCall_4_0()); }
		ruleEInt
		{ after(grammarAccess.getSensorAccess().getSensorPosEIntParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__DistanceAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSensorAccess().getDistanceDistanceEnumRuleCall_6_0()); }
		ruleDistance
		{ after(grammarAccess.getSensorAccess().getDistanceDistanceEnumRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tap__ConditionnameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTapAccess().getConditionnameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getTapAccess().getConditionnameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MotorAction__ActionnameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMotorActionAccess().getActionnameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getMotorActionAccess().getActionnameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MotorAction__MotorLeftAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMotorActionAccess().getMotorLeftEIntParserRuleCall_3_1_0()); }
		ruleEInt
		{ after(grammarAccess.getMotorActionAccess().getMotorLeftEIntParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MotorAction__MotorRightAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMotorActionAccess().getMotorRightEIntParserRuleCall_4_1_0()); }
		ruleEInt
		{ after(grammarAccess.getMotorActionAccess().getMotorRightEIntParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SoundAction__ActionnameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSoundActionAccess().getActionnameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getSoundActionAccess().getActionnameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SoundAction__MusicsettingsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSoundActionAccess().getMusicsettingsMusicSettingParserRuleCall_3_1_0()); }
		ruleMusicSetting
		{ after(grammarAccess.getSoundActionAccess().getMusicsettingsMusicSettingParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SoundAction__MusicsettingsAssignment_3_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSoundActionAccess().getMusicsettingsMusicSettingParserRuleCall_3_2_1_0()); }
		ruleMusicSetting
		{ after(grammarAccess.getSoundActionAccess().getMusicsettingsMusicSettingParserRuleCall_3_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LightAction__ActionnameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLightActionAccess().getActionnameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getLightActionAccess().getActionnameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LightAction__PosAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLightActionAccess().getPosLightPosEnumRuleCall_4_0()); }
		ruleLightPos
		{ after(grammarAccess.getLightActionAccess().getPosLightPosEnumRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LightAction__RedAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLightActionAccess().getRedEIntParserRuleCall_5_1_0()); }
		ruleEInt
		{ after(grammarAccess.getLightActionAccess().getRedEIntParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LightAction__GreenAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLightActionAccess().getGreenEIntParserRuleCall_6_1_0()); }
		ruleEInt
		{ after(grammarAccess.getLightActionAccess().getGreenEIntParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LightAction__BlueAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLightActionAccess().getBlueEIntParserRuleCall_7_1_0()); }
		ruleEInt
		{ after(grammarAccess.getLightActionAccess().getBlueEIntParserRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MusicSetting__NoteAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMusicSettingAccess().getNoteEIntParserRuleCall_2_0()); }
		ruleEInt
		{ after(grammarAccess.getMusicSettingAccess().getNoteEIntParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MusicSetting__DurationAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMusicSettingAccess().getDurationDurationEnumRuleCall_4_0()); }
		ruleDuration
		{ after(grammarAccess.getMusicSettingAccess().getDurationDurationEnumRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MusicSetting__PosAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMusicSettingAccess().getPosEIntParserRuleCall_6_0()); }
		ruleEInt
		{ after(grammarAccess.getMusicSettingAccess().getPosEIntParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
